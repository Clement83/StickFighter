const byte menuMulti[] PROGMEM = {48,40,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x80,0x0,0x0,0x0,0x0,0x10,0x80,0x0,0x0,0x0,0x0,0x10,0x80,0x0,0x1,0xC0,0x0,0x10,0x80,0x0,0x7,0xE0,0x0,0x10,0x80,0x0,0x1F,0xF0,0x0,0x10,0x80,0x0,0x7F,0xD8,0x0,0x10,0x80,0x0,0xFF,0xC8,0x0,0x10,0x80,0x0,0xFF,0xC8,0x0,0x10,0x80,0x0,0xFF,0xC8,0x0,0x10,0x87,0xC1,0x7F,0xF0,0x0,0x10,0x81,0xF1,0x7F,0x80,0x0,0x10,0x87,0xC1,0x3F,0x80,0x0,0x10,0x83,0x81,0x1F,0x0,0x0,0x10,0x81,0x80,0xE3,0x60,0x0,0x10,0x81,0x0,0x3,0xE0,0x0,0x10,0x80,0x0,0xF,0xF0,0x0,0x10,0x83,0xC0,0xF,0xF1,0xE0,0x10,0x87,0xE0,0x7,0xE3,0x78,0x10,0x8D,0xD0,0x7,0x3,0xEC,0x10,0x8F,0xF0,0x0,0x3,0x1C,0x10,0x8E,0x10,0x0,0x63,0x9C,0xD0,0x8F,0xF0,0x0,0x73,0xFD,0xD0,0xFF,0xE0,0x0,0x39,0xFB,0x90,0xFF,0xE0,0x0,0x1C,0xF7,0x10,0x84,0x20,0x0,0xE,0xCE,0x10,0x84,0x20,0x0,0x7,0xFC,0x10,0x84,0x20,0x0,0x3,0xF0,0x10,0x80,0x0,0x0,0x1,0xC0,0x10,0x80,0x0,0x0,0x1,0x80,0x10,0x80,0x0,0x0,0x1,0x80,0x10,0x80,0x0,0x0,0x1,0x80,0x10,0xBA,0xA3,0xB8,0x1,0x80,0x10,0xBA,0xA1,0x10,0x3,0x0,0x10,0xAA,0xA1,0x10,0xF,0x80,0x10,0xAA,0xA1,0x10,0x1E,0xC0,0x10,0xA9,0x39,0x38,0x38,0xC0,0x10,0x80,0x0,0x0,0x70,0xC0,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,};
const byte menuOption[] PROGMEM = {48,40,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x80,0x0,0x0,0x0,0x0,0x10,0x93,0x3B,0x92,0x98,0x0,0x10,0xAA,0x91,0x2A,0xA0,0x0,0x10,0xAB,0x11,0x2B,0x90,0x0,0x10,0xAA,0x11,0x2B,0x88,0x0,0x10,0x92,0x13,0x92,0xB0,0x0,0x10,0x80,0x0,0x0,0x0,0x1C,0x10,0x80,0x0,0x0,0x0,0x1C,0x10,0x80,0x0,0x0,0x7,0x3E,0x70,0x80,0x0,0x0,0x7,0xFF,0xF0,0x80,0x0,0x0,0x7,0xFF,0xF0,0x80,0x0,0x0,0x3,0xBE,0xF0,0x80,0x0,0x0,0x3,0xFF,0xF0,0x80,0x3,0x8E,0x7,0xFF,0xF0,0x80,0x3,0x8E,0x1F,0xE3,0xF0,0x80,0x3,0xFE,0x1F,0xE3,0xF0,0x80,0x3,0xFE,0x1F,0xE3,0xF0,0x80,0x7,0xFF,0x7,0xFF,0xF0,0x80,0x7F,0xFF,0xF3,0xFF,0xF0,0x80,0x7D,0xFD,0xF3,0xBE,0xF0,0x80,0x7F,0xFF,0xF7,0xFF,0xF0,0x8E,0x1F,0x8F,0xC7,0xFF,0xF0,0x9E,0x1F,0x8F,0xC7,0x3E,0x70,0xFE,0x7F,0xFF,0xF0,0x1C,0x10,0xFC,0x7F,0xFF,0xF0,0x1C,0x10,0xFE,0x7D,0xFD,0xF0,0x0,0x10,0xFF,0xF,0xFF,0x80,0x0,0x10,0xDF,0x7,0xFF,0x0,0x0,0x10,0xFF,0xF3,0xFE,0x0,0x0,0x10,0xFF,0xF3,0xFE,0x0,0x0,0x10,0xFF,0xF3,0x8E,0x0,0x0,0x10,0xFF,0x83,0x8E,0x0,0x0,0x10,0xDF,0x80,0x0,0x0,0x0,0x10,0xFF,0x0,0x0,0x0,0x0,0x10,0xFF,0xC0,0x0,0x0,0x0,0x10,0xFF,0xC0,0x0,0x0,0x0,0x10,0xFF,0xC0,0x0,0x0,0x0,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,};
const byte menuSolo[] PROGMEM = {48,40,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x80,0x0,0x0,0x0,0x0,0x10,0x80,0x0,0x0,0x0,0x0,0x10,0xA9,0x80,0x1,0xC0,0x0,0x10,0xAA,0x0,0x7,0xE0,0x0,0x10,0xA9,0x0,0x1F,0xF0,0x0,0x10,0xA8,0x80,0x7F,0xD8,0x0,0x10,0x93,0x20,0xFF,0xC8,0x0,0x10,0x80,0x0,0xFF,0xC8,0x0,0x10,0x9B,0x0,0xFF,0xC8,0x0,0x10,0xA2,0x81,0x7F,0xF0,0x0,0x10,0xA3,0x1,0x7F,0x80,0x0,0x10,0xAA,0x81,0x3F,0x80,0x0,0x10,0x9B,0x1,0x1F,0x0,0x0,0x10,0x80,0x0,0xE3,0x60,0x0,0x10,0x80,0x0,0x3,0xE0,0x0,0x10,0x80,0x0,0xF,0xF0,0x0,0x10,0x80,0x0,0xF,0xF1,0xE0,0x10,0x80,0x0,0x7,0xE3,0x78,0x10,0x80,0x0,0x7,0x3,0xEC,0x10,0x80,0x0,0x0,0x3,0x1C,0x10,0x80,0x0,0x0,0x63,0x9C,0xD0,0x80,0x0,0x0,0x73,0xFD,0xD0,0x80,0x0,0x0,0x39,0xFB,0x90,0x81,0xF0,0x0,0x1C,0xF7,0x10,0x80,0x7C,0x0,0xE,0xCE,0x10,0x81,0xF0,0x0,0x7,0xFC,0x10,0x80,0xE0,0x0,0x3,0xF0,0x10,0x80,0x60,0x0,0x1,0xC0,0x10,0x80,0x40,0x0,0x1,0x80,0x10,0x80,0x0,0x0,0x1,0x80,0x10,0x9F,0xFF,0xC0,0x1,0x80,0x10,0xA0,0x0,0x20,0x1,0x80,0x10,0xA1,0xFC,0x20,0x3,0x0,0x10,0xA5,0xE4,0x20,0xF,0x80,0x10,0xAD,0xF5,0xA0,0x1E,0xC0,0x10,0xA5,0xFC,0x20,0x38,0xC0,0x10,0xA1,0xFC,0x20,0x70,0xC0,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,};

byte const * tabSpriteMenu[3] = {menuSolo, menuMulti, menuOption} ;

#define INDEX_MAX_ITEM_MENU 2
byte focusItem;
void initMainMenu()
{
   focusItem = 0;//0 solo game, 1 multi game , 2 option 
}

void updateMainMenu()
{
  if(gb.buttons.pressed(BTN_LEFT))
  {
    if(focusItem == 0)
    {
      focusItem = INDEX_MAX_ITEM_MENU;
    }
    else 
    {
      focusItem--;
    }
  }
  else if(gb.buttons.pressed(BTN_RIGHT))
  {
    if(focusItem == INDEX_MAX_ITEM_MENU)
    {
      focusItem = 0;
    }
    else 
    {
      focusItem++;
    }
  }
  else if(gb.buttons.pressed(BTN_A))
  {
    
    if(focusItem == 1)
    {
      isMaster = false; //TODO Multiplayer game 
      isOnePlayer = false; //TODO Multiplayer game 
      isPaused = true;
      setupMaster();
      setupSlave();
    }
    
    stateGame = focusItem;
  }
}

void drawMainMenu()
{
  gb.display.drawBitmap(-24,8,tabSpriteMenu[((focusItem==0)? INDEX_MAX_ITEM_MENU : focusItem-1)]);
  gb.display.drawBitmap(22,2,tabSpriteMenu[focusItem]);
  gb.display.drawBitmap(68,8,tabSpriteMenu[((focusItem==INDEX_MAX_ITEM_MENU)? 0 : focusItem+1)]);
}
